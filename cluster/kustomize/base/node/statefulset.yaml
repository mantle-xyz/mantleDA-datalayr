apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: dl-node
  labels:
    app: dl-node
spec:
  serviceName: dl-node
  podManagementPolicy: Parallel
  replicas: 1
  selector:
    matchLabels:
      app: dl-node
  volumeClaimTemplates:
    # dl node allocated with most data storage
    - metadata:
        name: data
        labels:
          owner: dl-node
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 80Gi
  template:
    metadata:
      labels:
        app: dl-node
        ver: "0.2"
      annotations:
        eigenda.io/should_be_scraped: "true"
        eigenda.io/scrape_port: "9091"
    spec:
      volumes:
        - name: conf
          emptyDir: {}
        - name: dl-nodes-ip-map
          configMap:
            name: dl-nodes-ip-map
        - name: chain-relay-node-port
          configMap:
            name: chain-relay-node-port
      initContainers:
        - name: init-container-data-loader
          image: ghcr.io/layr-labs/datalayr/init-container-data-loader:point-300000
          imagePullPolicy: Always
          volumeMounts:
            - name: conf
              mountPath: /conf.d
            - name: data
              mountPath: /data
            - name: dl-nodes-ip-map
              mountPath: /dl-nodes-ip-map
          env:
            - name: NODEIP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
          command:
            - /bin/sh
            - -c
            - |
              cp /dl-nodes-ip-map/Int_IP.${NODEIP} /conf.d/EXT_IP ; \
              echo ${NODEIP} > /data/init_NODEIP ; \
              cp -r /dl-nodes-ip-map /data/ ; \
              ordinal=${HOSTNAME##*-} ; \
              cp /dl-node-${ordinal}/* /conf.d/ ; \
              cp -r /template/* /data/ \
              && echo "Successfully copied data directory to /data" \
              || echo "Error copied data directory to /data"
      containers:
        - name: dl-node
          image: ghcr.io/layr-labs/datalayr/dl-node:{{tag}}
          imagePullPolicy: Always
          env:
            - name: NODEIP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: NUM_CLUSTER_GRAPH
              value: "1"
            - name: NUM_CHAIN_RELAY
              value: "1"
          startupProbe:
            httpGet:
              path: /healthz
              port: 9091
            initialDelaySeconds: 30
            failureThreshold: 10
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /healthz
              port: 9091
            failureThreshold: 3
            periodSeconds: 10
          volumeMounts:
            - name: conf
              mountPath: /conf.d
            - name: data
              mountPath: /data
            - name: chain-relay-node-port
              mountPath: /chain-relay-node-port
          command:
            - /bin/sh
            - -c
            - |
              apk add curl ; \
              echo $NODEIP > /conf.d/NODEIP ; \
              for entry in $(ls /conf.d/); do export "$entry=$(cat /conf.d/$entry)"; done ; \
              EXP_IP=$(cat /conf.d/EXT_IP) ; \
              export DL_NODE_HOSTNAME=${EXP_IP} ; \
              echo $DL_NODE_HOSTNAME > /conf.d/DL_NODE_HOSTNAME ; \
              ordinal=${HOSTNAME##*-} ; \
              for entry in $(ls /chain-relay-node-port/); do export "$entry=$(cat /chain-relay-node-port/$entry)"; done ; \
              relay_index=$( expr $ordinal % $NUM_CHAIN_RELAY  ) ; \
              echo $relay_index > relay_index ; \
              graph_index=$( expr $ordinal % $NUM_CLUSTER_GRAPH ) ; \
              socket=$(cat /chain-relay-node-port/HTTP_NODE_PORT_${relay_index}) ; \
              relay_index=$( expr $ordinal % $NUM_CHAIN_RELAY  ) ; \
              graph_index=$( expr $ordinal % $NUM_CLUSTER_GRAPH  ) ; \
              echo $socket > /conf.d/DL_NODE_CHAIN_PROVIDER_SOCKET ; \
              export DL_NODE_CHAIN_RPC=http://$socket ; \
              export DL_NODE_GRAPH_PROVIDER=http://graph-svc-${graph_index}:8000/subgraphs/name/datalayr ; \
              dl-node



