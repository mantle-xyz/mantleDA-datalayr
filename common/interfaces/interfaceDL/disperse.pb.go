// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.15.8
// source: common/interfaces/interfaceDL/disperse.proto

package interfaceDL

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ChallengeReply_ChallengeStatus int32

const (
	ChallengeReply_AGREE       ChallengeReply_ChallengeStatus = 0
	ChallengeReply_DISAGREE    ChallengeReply_ChallengeStatus = 1
	ChallengeReply_INTERNALERR ChallengeReply_ChallengeStatus = 2
)

// Enum value maps for ChallengeReply_ChallengeStatus.
var (
	ChallengeReply_ChallengeStatus_name = map[int32]string{
		0: "AGREE",
		1: "DISAGREE",
		2: "INTERNALERR",
	}
	ChallengeReply_ChallengeStatus_value = map[string]int32{
		"AGREE":       0,
		"DISAGREE":    1,
		"INTERNALERR": 2,
	}
)

func (x ChallengeReply_ChallengeStatus) Enum() *ChallengeReply_ChallengeStatus {
	p := new(ChallengeReply_ChallengeStatus)
	*p = x
	return p
}

func (x ChallengeReply_ChallengeStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChallengeReply_ChallengeStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_common_interfaces_interfaceDL_disperse_proto_enumTypes[0].Descriptor()
}

func (ChallengeReply_ChallengeStatus) Type() protoreflect.EnumType {
	return &file_common_interfaces_interfaceDL_disperse_proto_enumTypes[0]
}

func (x ChallengeReply_ChallengeStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChallengeReply_ChallengeStatus.Descriptor instead.
func (ChallengeReply_ChallengeStatus) EnumDescriptor() ([]byte, []int) {
	return file_common_interfaces_interfaceDL_disperse_proto_rawDescGZIP(), []int{14, 0}
}

type EncodeStoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Duration    uint64 `protobuf:"varint,1,opt,name=Duration,proto3" json:"Duration,omitempty"`
	Data        []byte `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`
	BlockNumber uint32 `protobuf:"varint,3,opt,name=BlockNumber,proto3" json:"BlockNumber,omitempty"`
}

func (x *EncodeStoreRequest) Reset() {
	*x = EncodeStoreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_interfaces_interfaceDL_disperse_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncodeStoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncodeStoreRequest) ProtoMessage() {}

func (x *EncodeStoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_common_interfaces_interfaceDL_disperse_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncodeStoreRequest.ProtoReflect.Descriptor instead.
func (*EncodeStoreRequest) Descriptor() ([]byte, []int) {
	return file_common_interfaces_interfaceDL_disperse_proto_rawDescGZIP(), []int{0}
}

func (x *EncodeStoreRequest) GetDuration() uint64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *EncodeStoreRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *EncodeStoreRequest) GetBlockNumber() uint32 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

type StoreParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Store Params
	ReferenceBlockNumber uint32 `protobuf:"varint,15,opt,name=ReferenceBlockNumber,proto3" json:"ReferenceBlockNumber,omitempty"`
	TotalOperatorsIndex  uint32 `protobuf:"varint,16,opt,name=TotalOperatorsIndex,proto3" json:"TotalOperatorsIndex,omitempty"`
	OrigDataSize         uint32 `protobuf:"varint,1,opt,name=OrigDataSize,proto3" json:"OrigDataSize,omitempty"`
	NumTotal             uint32 `protobuf:"varint,2,opt,name=NumTotal,proto3" json:"NumTotal,omitempty"`
	Quorum               uint32 `protobuf:"varint,3,opt,name=Quorum,proto3" json:"Quorum,omitempty"`
	NumSys               uint32 `protobuf:"varint,4,opt,name=NumSys,proto3" json:"NumSys,omitempty"`
	NumPar               uint32 `protobuf:"varint,5,opt,name=NumPar,proto3" json:"NumPar,omitempty"`
	Duration             uint32 `protobuf:"varint,6,opt,name=Duration,proto3" json:"Duration,omitempty"`
	// Data and Encoding
	KzgCommit      []byte   `protobuf:"bytes,7,opt,name=KzgCommit,proto3" json:"KzgCommit,omitempty"`
	LowDegreeProof []byte   `protobuf:"bytes,8,opt,name=LowDegreeProof,proto3" json:"LowDegreeProof,omitempty"`
	Degree         uint32   `protobuf:"varint,9,opt,name=Degree,proto3" json:"Degree,omitempty"`
	TotalSize      uint64   `protobuf:"varint,10,opt,name=TotalSize,proto3" json:"TotalSize,omitempty"`
	Order          []uint32 `protobuf:"varint,11,rep,packed,name=Order,proto3" json:"Order,omitempty"`
	// Chain
	Fee        []byte `protobuf:"bytes,12,opt,name=Fee,proto3" json:"Fee,omitempty"`
	HeaderHash []byte `protobuf:"bytes,13,opt,name=HeaderHash,proto3" json:"HeaderHash,omitempty"`
	Disperser  []byte `protobuf:"bytes,14,opt,name=Disperser,proto3" json:"Disperser,omitempty"`
}

func (x *StoreParams) Reset() {
	*x = StoreParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_interfaces_interfaceDL_disperse_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreParams) ProtoMessage() {}

func (x *StoreParams) ProtoReflect() protoreflect.Message {
	mi := &file_common_interfaces_interfaceDL_disperse_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreParams.ProtoReflect.Descriptor instead.
func (*StoreParams) Descriptor() ([]byte, []int) {
	return file_common_interfaces_interfaceDL_disperse_proto_rawDescGZIP(), []int{1}
}

func (x *StoreParams) GetReferenceBlockNumber() uint32 {
	if x != nil {
		return x.ReferenceBlockNumber
	}
	return 0
}

func (x *StoreParams) GetTotalOperatorsIndex() uint32 {
	if x != nil {
		return x.TotalOperatorsIndex
	}
	return 0
}

func (x *StoreParams) GetOrigDataSize() uint32 {
	if x != nil {
		return x.OrigDataSize
	}
	return 0
}

func (x *StoreParams) GetNumTotal() uint32 {
	if x != nil {
		return x.NumTotal
	}
	return 0
}

func (x *StoreParams) GetQuorum() uint32 {
	if x != nil {
		return x.Quorum
	}
	return 0
}

func (x *StoreParams) GetNumSys() uint32 {
	if x != nil {
		return x.NumSys
	}
	return 0
}

func (x *StoreParams) GetNumPar() uint32 {
	if x != nil {
		return x.NumPar
	}
	return 0
}

func (x *StoreParams) GetDuration() uint32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *StoreParams) GetKzgCommit() []byte {
	if x != nil {
		return x.KzgCommit
	}
	return nil
}

func (x *StoreParams) GetLowDegreeProof() []byte {
	if x != nil {
		return x.LowDegreeProof
	}
	return nil
}

func (x *StoreParams) GetDegree() uint32 {
	if x != nil {
		return x.Degree
	}
	return 0
}

func (x *StoreParams) GetTotalSize() uint64 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

func (x *StoreParams) GetOrder() []uint32 {
	if x != nil {
		return x.Order
	}
	return nil
}

func (x *StoreParams) GetFee() []byte {
	if x != nil {
		return x.Fee
	}
	return nil
}

func (x *StoreParams) GetHeaderHash() []byte {
	if x != nil {
		return x.HeaderHash
	}
	return nil
}

func (x *StoreParams) GetDisperser() []byte {
	if x != nil {
		return x.Disperser
	}
	return nil
}

type EncodeStoreReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//enum EncodeStoreStatus {
	//OK = 0;
	//Err = 1;
	//}
	Store *StoreParams `protobuf:"bytes,1,opt,name=store,proto3" json:"store,omitempty"` // EncodeStoreStatus status = 2;
}

func (x *EncodeStoreReply) Reset() {
	*x = EncodeStoreReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_interfaces_interfaceDL_disperse_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncodeStoreReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncodeStoreReply) ProtoMessage() {}

func (x *EncodeStoreReply) ProtoReflect() protoreflect.Message {
	mi := &file_common_interfaces_interfaceDL_disperse_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncodeStoreReply.ProtoReflect.Descriptor instead.
func (*EncodeStoreReply) Descriptor() ([]byte, []int) {
	return file_common_interfaces_interfaceDL_disperse_proto_rawDescGZIP(), []int{2}
}

func (x *EncodeStoreReply) GetStore() *StoreParams {
	if x != nil {
		return x.Store
	}
	return nil
}

type DisperseStoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HeaderHash  []byte `protobuf:"bytes,1,opt,name=HeaderHash,proto3" json:"HeaderHash,omitempty"`
	MessageHash []byte `protobuf:"bytes,2,opt,name=MessageHash,proto3" json:"MessageHash,omitempty"`
}

func (x *DisperseStoreRequest) Reset() {
	*x = DisperseStoreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_interfaces_interfaceDL_disperse_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisperseStoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisperseStoreRequest) ProtoMessage() {}

func (x *DisperseStoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_common_interfaces_interfaceDL_disperse_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisperseStoreRequest.ProtoReflect.Descriptor instead.
func (*DisperseStoreRequest) Descriptor() ([]byte, []int) {
	return file_common_interfaces_interfaceDL_disperse_proto_rawDescGZIP(), []int{3}
}

func (x *DisperseStoreRequest) GetHeaderHash() []byte {
	if x != nil {
		return x.HeaderHash
	}
	return nil
}

func (x *DisperseStoreRequest) GetMessageHash() []byte {
	if x != nil {
		return x.MessageHash
	}
	return nil
}

type AggregateSignature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AggSig            []byte   `protobuf:"bytes,1,opt,name=AggSig,proto3" json:"AggSig,omitempty"`
	StoredAggPubkeyG1 []byte   `protobuf:"bytes,2,opt,name=StoredAggPubkeyG1,proto3" json:"StoredAggPubkeyG1,omitempty"`
	UsedAggPubkeyG2   []byte   `protobuf:"bytes,3,opt,name=UsedAggPubkeyG2,proto3" json:"UsedAggPubkeyG2,omitempty"`
	NonSignerPubkeys  [][]byte `protobuf:"bytes,4,rep,name=NonSignerPubkeys,proto3" json:"NonSignerPubkeys,omitempty"`
}

func (x *AggregateSignature) Reset() {
	*x = AggregateSignature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_interfaces_interfaceDL_disperse_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AggregateSignature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregateSignature) ProtoMessage() {}

func (x *AggregateSignature) ProtoReflect() protoreflect.Message {
	mi := &file_common_interfaces_interfaceDL_disperse_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregateSignature.ProtoReflect.Descriptor instead.
func (*AggregateSignature) Descriptor() ([]byte, []int) {
	return file_common_interfaces_interfaceDL_disperse_proto_rawDescGZIP(), []int{4}
}

func (x *AggregateSignature) GetAggSig() []byte {
	if x != nil {
		return x.AggSig
	}
	return nil
}

func (x *AggregateSignature) GetStoredAggPubkeyG1() []byte {
	if x != nil {
		return x.StoredAggPubkeyG1
	}
	return nil
}

func (x *AggregateSignature) GetUsedAggPubkeyG2() []byte {
	if x != nil {
		return x.UsedAggPubkeyG2
	}
	return nil
}

func (x *AggregateSignature) GetNonSignerPubkeys() [][]byte {
	if x != nil {
		return x.NonSignerPubkeys
	}
	return nil
}

type DisperseStoreReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//enum Status {
	//OK = 0;
	//Err = 1;
	//}
	//Status status = 1;
	Sigs            *AggregateSignature `protobuf:"bytes,1,opt,name=sigs,proto3" json:"sigs,omitempty"`
	ApkIndex        uint32              `protobuf:"varint,2,opt,name=ApkIndex,proto3" json:"ApkIndex,omitempty"`
	TotalStakeIndex uint64              `protobuf:"varint,3,opt,name=TotalStakeIndex,proto3" json:"TotalStakeIndex,omitempty"`
}

func (x *DisperseStoreReply) Reset() {
	*x = DisperseStoreReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_interfaces_interfaceDL_disperse_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisperseStoreReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisperseStoreReply) ProtoMessage() {}

func (x *DisperseStoreReply) ProtoReflect() protoreflect.Message {
	mi := &file_common_interfaces_interfaceDL_disperse_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisperseStoreReply.ProtoReflect.Descriptor instead.
func (*DisperseStoreReply) Descriptor() ([]byte, []int) {
	return file_common_interfaces_interfaceDL_disperse_proto_rawDescGZIP(), []int{5}
}

func (x *DisperseStoreReply) GetSigs() *AggregateSignature {
	if x != nil {
		return x.Sigs
	}
	return nil
}

func (x *DisperseStoreReply) GetApkIndex() uint32 {
	if x != nil {
		return x.ApkIndex
	}
	return 0
}

func (x *DisperseStoreReply) GetTotalStakeIndex() uint64 {
	if x != nil {
		return x.TotalStakeIndex
	}
	return 0
}

type EncodeAndDisperseStoreReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Store   *StoreParams        `protobuf:"bytes,1,opt,name=store,proto3" json:"store,omitempty"`
	Sigs    *AggregateSignature `protobuf:"bytes,2,opt,name=sigs,proto3" json:"sigs,omitempty"`
	MsgHash []byte              `protobuf:"bytes,3,opt,name=msgHash,proto3" json:"msgHash,omitempty"`
	StoreId uint32              `protobuf:"varint,4,opt,name=storeId,proto3" json:"storeId,omitempty"`
}

func (x *EncodeAndDisperseStoreReply) Reset() {
	*x = EncodeAndDisperseStoreReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_interfaces_interfaceDL_disperse_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncodeAndDisperseStoreReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncodeAndDisperseStoreReply) ProtoMessage() {}

func (x *EncodeAndDisperseStoreReply) ProtoReflect() protoreflect.Message {
	mi := &file_common_interfaces_interfaceDL_disperse_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncodeAndDisperseStoreReply.ProtoReflect.Descriptor instead.
func (*EncodeAndDisperseStoreReply) Descriptor() ([]byte, []int) {
	return file_common_interfaces_interfaceDL_disperse_proto_rawDescGZIP(), []int{6}
}

func (x *EncodeAndDisperseStoreReply) GetStore() *StoreParams {
	if x != nil {
		return x.Store
	}
	return nil
}

func (x *EncodeAndDisperseStoreReply) GetSigs() *AggregateSignature {
	if x != nil {
		return x.Sigs
	}
	return nil
}

func (x *EncodeAndDisperseStoreReply) GetMsgHash() []byte {
	if x != nil {
		return x.MsgHash
	}
	return nil
}

func (x *EncodeAndDisperseStoreReply) GetStoreId() uint32 {
	if x != nil {
		return x.StoreId
	}
	return 0
}

type StoreFrameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgHash []byte `protobuf:"bytes,1,opt,name=msgHash,proto3" json:"msgHash,omitempty"`
	Frame   []byte `protobuf:"bytes,3,opt,name=frame,proto3" json:"frame,omitempty"`
}

func (x *StoreFrameRequest) Reset() {
	*x = StoreFrameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_interfaces_interfaceDL_disperse_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreFrameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreFrameRequest) ProtoMessage() {}

func (x *StoreFrameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_common_interfaces_interfaceDL_disperse_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreFrameRequest.ProtoReflect.Descriptor instead.
func (*StoreFrameRequest) Descriptor() ([]byte, []int) {
	return file_common_interfaces_interfaceDL_disperse_proto_rawDescGZIP(), []int{7}
}

func (x *StoreFrameRequest) GetMsgHash() []byte {
	if x != nil {
		return x.MsgHash
	}
	return nil
}

func (x *StoreFrameRequest) GetFrame() []byte {
	if x != nil {
		return x.Frame
	}
	return nil
}

type StoreFramesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgHash []byte   `protobuf:"bytes,1,opt,name=msgHash,proto3" json:"msgHash,omitempty"`
	Frame   [][]byte `protobuf:"bytes,3,rep,name=frame,proto3" json:"frame,omitempty"`
}

func (x *StoreFramesRequest) Reset() {
	*x = StoreFramesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_interfaces_interfaceDL_disperse_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreFramesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreFramesRequest) ProtoMessage() {}

func (x *StoreFramesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_common_interfaces_interfaceDL_disperse_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreFramesRequest.ProtoReflect.Descriptor instead.
func (*StoreFramesRequest) Descriptor() ([]byte, []int) {
	return file_common_interfaces_interfaceDL_disperse_proto_rawDescGZIP(), []int{8}
}

func (x *StoreFramesRequest) GetMsgHash() []byte {
	if x != nil {
		return x.MsgHash
	}
	return nil
}

func (x *StoreFramesRequest) GetFrame() [][]byte {
	if x != nil {
		return x.Frame
	}
	return nil
}

type StoreFrameReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature []byte `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *StoreFrameReply) Reset() {
	*x = StoreFrameReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_interfaces_interfaceDL_disperse_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreFrameReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreFrameReply) ProtoMessage() {}

func (x *StoreFrameReply) ProtoReflect() protoreflect.Message {
	mi := &file_common_interfaces_interfaceDL_disperse_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreFrameReply.ProtoReflect.Descriptor instead.
func (*StoreFrameReply) Descriptor() ([]byte, []int) {
	return file_common_interfaces_interfaceDL_disperse_proto_rawDescGZIP(), []int{9}
}

func (x *StoreFrameReply) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type RetrieveFrameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Commit []byte `protobuf:"bytes,1,opt,name=commit,proto3" json:"commit,omitempty"`
}

func (x *RetrieveFrameRequest) Reset() {
	*x = RetrieveFrameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_interfaces_interfaceDL_disperse_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveFrameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveFrameRequest) ProtoMessage() {}

func (x *RetrieveFrameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_common_interfaces_interfaceDL_disperse_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveFrameRequest.ProtoReflect.Descriptor instead.
func (*RetrieveFrameRequest) Descriptor() ([]byte, []int) {
	return file_common_interfaces_interfaceDL_disperse_proto_rawDescGZIP(), []int{10}
}

func (x *RetrieveFrameRequest) GetCommit() []byte {
	if x != nil {
		return x.Commit
	}
	return nil
}

type RetrieveFrameReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Frame []byte `protobuf:"bytes,1,opt,name=frame,proto3" json:"frame,omitempty"`
}

func (x *RetrieveFrameReply) Reset() {
	*x = RetrieveFrameReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_interfaces_interfaceDL_disperse_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveFrameReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveFrameReply) ProtoMessage() {}

func (x *RetrieveFrameReply) ProtoReflect() protoreflect.Message {
	mi := &file_common_interfaces_interfaceDL_disperse_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveFrameReply.ProtoReflect.Descriptor instead.
func (*RetrieveFrameReply) Descriptor() ([]byte, []int) {
	return file_common_interfaces_interfaceDL_disperse_proto_rawDescGZIP(), []int{11}
}

func (x *RetrieveFrameReply) GetFrame() []byte {
	if x != nil {
		return x.Frame
	}
	return nil
}

type CodingChallengeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Commit []byte   `protobuf:"bytes,1,opt,name=commit,proto3" json:"commit,omitempty"`
	Frames [][]byte `protobuf:"bytes,2,rep,name=frames,proto3" json:"frames,omitempty"`
}

func (x *CodingChallengeRequest) Reset() {
	*x = CodingChallengeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_interfaces_interfaceDL_disperse_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CodingChallengeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CodingChallengeRequest) ProtoMessage() {}

func (x *CodingChallengeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_common_interfaces_interfaceDL_disperse_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CodingChallengeRequest.ProtoReflect.Descriptor instead.
func (*CodingChallengeRequest) Descriptor() ([]byte, []int) {
	return file_common_interfaces_interfaceDL_disperse_proto_rawDescGZIP(), []int{12}
}

func (x *CodingChallengeRequest) GetCommit() []byte {
	if x != nil {
		return x.Commit
	}
	return nil
}

func (x *CodingChallengeRequest) GetFrames() [][]byte {
	if x != nil {
		return x.Frames
	}
	return nil
}

type PaymentChallengeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *PaymentChallengeRequest) Reset() {
	*x = PaymentChallengeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_interfaces_interfaceDL_disperse_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentChallengeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentChallengeRequest) ProtoMessage() {}

func (x *PaymentChallengeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_common_interfaces_interfaceDL_disperse_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentChallengeRequest.ProtoReflect.Descriptor instead.
func (*PaymentChallengeRequest) Descriptor() ([]byte, []int) {
	return file_common_interfaces_interfaceDL_disperse_proto_rawDescGZIP(), []int{13}
}

func (x *PaymentChallengeRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type ChallengeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status    ChallengeReply_ChallengeStatus `protobuf:"varint,1,opt,name=status,proto3,enum=interfaceDL.ChallengeReply_ChallengeStatus" json:"status,omitempty"`
	Signature []byte                         `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *ChallengeReply) Reset() {
	*x = ChallengeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_interfaces_interfaceDL_disperse_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChallengeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChallengeReply) ProtoMessage() {}

func (x *ChallengeReply) ProtoReflect() protoreflect.Message {
	mi := &file_common_interfaces_interfaceDL_disperse_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChallengeReply.ProtoReflect.Descriptor instead.
func (*ChallengeReply) Descriptor() ([]byte, []int) {
	return file_common_interfaces_interfaceDL_disperse_proto_rawDescGZIP(), []int{14}
}

func (x *ChallengeReply) GetStatus() ChallengeReply_ChallengeStatus {
	if x != nil {
		return x.Status
	}
	return ChallengeReply_AGREE
}

func (x *ChallengeReply) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

var File_common_interfaces_interfaceDL_disperse_proto protoreflect.FileDescriptor

var file_common_interfaces_interfaceDL_disperse_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x73, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x44, 0x4c, 0x2f,
	0x64, 0x69, 0x73, 0x70, 0x65, 0x72, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x44, 0x4c, 0x22, 0x66, 0x0a, 0x12, 0x45,
	0x6e, 0x63, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x20, 0x0a, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x22, 0xf9, 0x03, 0x0a, 0x0b, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x12, 0x32, 0x0a, 0x14, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x14, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x13, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x22, 0x0a, 0x0c, 0x4f, 0x72, 0x69,
	0x67, 0x44, 0x61, 0x74, 0x61, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0c, 0x4f, 0x72, 0x69, 0x67, 0x44, 0x61, 0x74, 0x61, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x4e, 0x75, 0x6d, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x4e, 0x75, 0x6d, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x51, 0x75, 0x6f,
	0x72, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x51, 0x75, 0x6f, 0x72, 0x75,
	0x6d, 0x12, 0x16, 0x0a, 0x06, 0x4e, 0x75, 0x6d, 0x53, 0x79, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x4e, 0x75, 0x6d, 0x53, 0x79, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x4e, 0x75, 0x6d,
	0x50, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x4e, 0x75, 0x6d, 0x50, 0x61,
	0x72, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a,
	0x09, 0x4b, 0x7a, 0x67, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x09, 0x4b, 0x7a, 0x67, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x4c,
	0x6f, 0x77, 0x44, 0x65, 0x67, 0x72, 0x65, 0x65, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0e, 0x4c, 0x6f, 0x77, 0x44, 0x65, 0x67, 0x72, 0x65, 0x65, 0x50, 0x72,
	0x6f, 0x6f, 0x66, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x65, 0x67, 0x72, 0x65, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x44, 0x65, 0x67, 0x72, 0x65, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12,
	0x10, 0x0a, 0x03, 0x46, 0x65, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x46, 0x65,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x48, 0x61, 0x73, 0x68, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x48, 0x61, 0x73,
	0x68, 0x12, 0x1c, 0x0a, 0x09, 0x44, 0x69, 0x73, 0x70, 0x65, 0x72, 0x73, 0x65, 0x72, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x44, 0x69, 0x73, 0x70, 0x65, 0x72, 0x73, 0x65, 0x72, 0x22,
	0x42, 0x0a, 0x10, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x2e, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x44, 0x4c,
	0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x05, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x22, 0x58, 0x0a, 0x14, 0x44, 0x69, 0x73, 0x70, 0x65, 0x72, 0x73, 0x65, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x48, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0a, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x48, 0x61, 0x73, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x61, 0x73, 0x68, 0x22, 0xb0, 0x01,
	0x0a, 0x12, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x67, 0x67, 0x53, 0x69, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x41, 0x67, 0x67, 0x53, 0x69, 0x67, 0x12, 0x2c, 0x0a, 0x11,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x41, 0x67, 0x67, 0x50, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x47,
	0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x11, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x41,
	0x67, 0x67, 0x50, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x47, 0x31, 0x12, 0x28, 0x0a, 0x0f, 0x55, 0x73,
	0x65, 0x64, 0x41, 0x67, 0x67, 0x50, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x47, 0x32, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0f, 0x55, 0x73, 0x65, 0x64, 0x41, 0x67, 0x67, 0x50, 0x75, 0x62, 0x6b,
	0x65, 0x79, 0x47, 0x32, 0x12, 0x2a, 0x0a, 0x10, 0x4e, 0x6f, 0x6e, 0x53, 0x69, 0x67, 0x6e, 0x65,
	0x72, 0x50, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x10,
	0x4e, 0x6f, 0x6e, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x73,
	0x22, 0x8f, 0x01, 0x0a, 0x12, 0x44, 0x69, 0x73, 0x70, 0x65, 0x72, 0x73, 0x65, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x33, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x44, 0x4c, 0x2e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x04, 0x73, 0x69, 0x67, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x41, 0x70, 0x6b, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x41, 0x70, 0x6b, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x28, 0x0a, 0x0f, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0f, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x22, 0xb6, 0x01, 0x0a, 0x1b, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x41, 0x6e, 0x64,
	0x44, 0x69, 0x73, 0x70, 0x65, 0x72, 0x73, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x2e, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x44, 0x4c, 0x2e,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x05, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x12, 0x33, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x44, 0x4c, 0x2e, 0x41,
	0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x52, 0x04, 0x73, 0x69, 0x67, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x48, 0x61,
	0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x48, 0x61, 0x73,
	0x68, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x22, 0x43, 0x0a, 0x11, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x48, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x48, 0x61, 0x73, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x72,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x66, 0x72, 0x61, 0x6d, 0x65,
	0x22, 0x44, 0x0a, 0x12, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x48, 0x61, 0x73,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x48, 0x61, 0x73, 0x68,
	0x12, 0x14, 0x0a, 0x05, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0c, 0x52,
	0x05, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x22, 0x2f, 0x0a, 0x0f, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x46,
	0x72, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x2e, 0x0a, 0x14, 0x52, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x76, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x22, 0x2a, 0x0a, 0x12, 0x52, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x76, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x66, 0x72,
	0x61, 0x6d, 0x65, 0x22, 0x48, 0x0a, 0x16, 0x43, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x61,
	0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x63,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x06, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x33, 0x0a,
	0x17, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x22, 0xb0, 0x01, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x43, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x44, 0x4c, 0x2e, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x2e, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x3b, 0x0a, 0x0f, 0x43, 0x68, 0x61, 0x6c,
	0x6c, 0x65, 0x6e, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x09, 0x0a, 0x05, 0x41,
	0x47, 0x52, 0x45, 0x45, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x49, 0x53, 0x41, 0x47, 0x52,
	0x45, 0x45, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c,
	0x45, 0x52, 0x52, 0x10, 0x02, 0x32, 0xc5, 0x05, 0x0a, 0x0d, 0x44, 0x61, 0x74, 0x61, 0x44, 0x69,
	0x73, 0x70, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x12, 0x4f, 0x0a, 0x0b, 0x45, 0x6e, 0x63, 0x6f, 0x64,
	0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x1f, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x44, 0x4c, 0x2e, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x44, 0x4c, 0x2e, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x0d, 0x44, 0x69, 0x73, 0x70,
	0x65, 0x72, 0x73, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x21, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x44, 0x4c, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x65, 0x72, 0x73, 0x65,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x44, 0x4c, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x65,
	0x72, 0x73, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12,
	0x65, 0x0a, 0x16, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x41, 0x6e, 0x64, 0x44, 0x69, 0x73, 0x70,
	0x65, 0x72, 0x73, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x1f, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x44, 0x4c, 0x2e, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x44, 0x4c, 0x2e, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x41,
	0x6e, 0x64, 0x44, 0x69, 0x73, 0x70, 0x65, 0x72, 0x73, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0a, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x46,
	0x72, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x44, 0x4c, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x44, 0x4c, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0b, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x46, 0x72, 0x61,
	0x6d, 0x65, 0x73, 0x12, 0x1f, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x44,
	0x4c, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x44, 0x4c, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x0d, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65,
	0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x44, 0x4c, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x46, 0x72, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x44, 0x4c, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x46,
	0x72, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x30, 0x01, 0x12, 0x55, 0x0a,
	0x0f, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x69, 0x6e, 0x67,
	0x12, 0x23, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x44, 0x4c, 0x2e, 0x43,
	0x6f, 0x64, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x44, 0x4c, 0x2e, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x10, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67,
	0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x24, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x44, 0x4c, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x68,
	0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x44, 0x4c, 0x2e, 0x43, 0x68, 0x61,
	0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x3d, 0x5a,
	0x3b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4c, 0x61, 0x79, 0x72,
	0x2d, 0x4c, 0x61, 0x62, 0x73, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x6c, 0x61, 0x79, 0x72, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73,
	0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x44, 0x4c, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_common_interfaces_interfaceDL_disperse_proto_rawDescOnce sync.Once
	file_common_interfaces_interfaceDL_disperse_proto_rawDescData = file_common_interfaces_interfaceDL_disperse_proto_rawDesc
)

func file_common_interfaces_interfaceDL_disperse_proto_rawDescGZIP() []byte {
	file_common_interfaces_interfaceDL_disperse_proto_rawDescOnce.Do(func() {
		file_common_interfaces_interfaceDL_disperse_proto_rawDescData = protoimpl.X.CompressGZIP(file_common_interfaces_interfaceDL_disperse_proto_rawDescData)
	})
	return file_common_interfaces_interfaceDL_disperse_proto_rawDescData
}

var file_common_interfaces_interfaceDL_disperse_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_common_interfaces_interfaceDL_disperse_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_common_interfaces_interfaceDL_disperse_proto_goTypes = []interface{}{
	(ChallengeReply_ChallengeStatus)(0), // 0: interfaceDL.ChallengeReply.ChallengeStatus
	(*EncodeStoreRequest)(nil),          // 1: interfaceDL.EncodeStoreRequest
	(*StoreParams)(nil),                 // 2: interfaceDL.StoreParams
	(*EncodeStoreReply)(nil),            // 3: interfaceDL.EncodeStoreReply
	(*DisperseStoreRequest)(nil),        // 4: interfaceDL.DisperseStoreRequest
	(*AggregateSignature)(nil),          // 5: interfaceDL.AggregateSignature
	(*DisperseStoreReply)(nil),          // 6: interfaceDL.DisperseStoreReply
	(*EncodeAndDisperseStoreReply)(nil), // 7: interfaceDL.EncodeAndDisperseStoreReply
	(*StoreFrameRequest)(nil),           // 8: interfaceDL.StoreFrameRequest
	(*StoreFramesRequest)(nil),          // 9: interfaceDL.StoreFramesRequest
	(*StoreFrameReply)(nil),             // 10: interfaceDL.StoreFrameReply
	(*RetrieveFrameRequest)(nil),        // 11: interfaceDL.RetrieveFrameRequest
	(*RetrieveFrameReply)(nil),          // 12: interfaceDL.RetrieveFrameReply
	(*CodingChallengeRequest)(nil),      // 13: interfaceDL.CodingChallengeRequest
	(*PaymentChallengeRequest)(nil),     // 14: interfaceDL.PaymentChallengeRequest
	(*ChallengeReply)(nil),              // 15: interfaceDL.ChallengeReply
}
var file_common_interfaces_interfaceDL_disperse_proto_depIdxs = []int32{
	2,  // 0: interfaceDL.EncodeStoreReply.store:type_name -> interfaceDL.StoreParams
	5,  // 1: interfaceDL.DisperseStoreReply.sigs:type_name -> interfaceDL.AggregateSignature
	2,  // 2: interfaceDL.EncodeAndDisperseStoreReply.store:type_name -> interfaceDL.StoreParams
	5,  // 3: interfaceDL.EncodeAndDisperseStoreReply.sigs:type_name -> interfaceDL.AggregateSignature
	0,  // 4: interfaceDL.ChallengeReply.status:type_name -> interfaceDL.ChallengeReply.ChallengeStatus
	1,  // 5: interfaceDL.DataDispersal.EncodeStore:input_type -> interfaceDL.EncodeStoreRequest
	4,  // 6: interfaceDL.DataDispersal.DisperseStore:input_type -> interfaceDL.DisperseStoreRequest
	1,  // 7: interfaceDL.DataDispersal.EncodeAndDisperseStore:input_type -> interfaceDL.EncodeStoreRequest
	8,  // 8: interfaceDL.DataDispersal.StoreFrame:input_type -> interfaceDL.StoreFrameRequest
	9,  // 9: interfaceDL.DataDispersal.StoreFrames:input_type -> interfaceDL.StoreFramesRequest
	11, // 10: interfaceDL.DataDispersal.RetrieveFrame:input_type -> interfaceDL.RetrieveFrameRequest
	13, // 11: interfaceDL.DataDispersal.ChallengeCoding:input_type -> interfaceDL.CodingChallengeRequest
	14, // 12: interfaceDL.DataDispersal.ChallengePayment:input_type -> interfaceDL.PaymentChallengeRequest
	3,  // 13: interfaceDL.DataDispersal.EncodeStore:output_type -> interfaceDL.EncodeStoreReply
	6,  // 14: interfaceDL.DataDispersal.DisperseStore:output_type -> interfaceDL.DisperseStoreReply
	7,  // 15: interfaceDL.DataDispersal.EncodeAndDisperseStore:output_type -> interfaceDL.EncodeAndDisperseStoreReply
	10, // 16: interfaceDL.DataDispersal.StoreFrame:output_type -> interfaceDL.StoreFrameReply
	10, // 17: interfaceDL.DataDispersal.StoreFrames:output_type -> interfaceDL.StoreFrameReply
	12, // 18: interfaceDL.DataDispersal.RetrieveFrame:output_type -> interfaceDL.RetrieveFrameReply
	15, // 19: interfaceDL.DataDispersal.ChallengeCoding:output_type -> interfaceDL.ChallengeReply
	15, // 20: interfaceDL.DataDispersal.ChallengePayment:output_type -> interfaceDL.ChallengeReply
	13, // [13:21] is the sub-list for method output_type
	5,  // [5:13] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_common_interfaces_interfaceDL_disperse_proto_init() }
func file_common_interfaces_interfaceDL_disperse_proto_init() {
	if File_common_interfaces_interfaceDL_disperse_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_common_interfaces_interfaceDL_disperse_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EncodeStoreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_interfaces_interfaceDL_disperse_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_interfaces_interfaceDL_disperse_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EncodeStoreReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_interfaces_interfaceDL_disperse_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisperseStoreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_interfaces_interfaceDL_disperse_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AggregateSignature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_interfaces_interfaceDL_disperse_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisperseStoreReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_interfaces_interfaceDL_disperse_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EncodeAndDisperseStoreReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_interfaces_interfaceDL_disperse_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreFrameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_interfaces_interfaceDL_disperse_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreFramesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_interfaces_interfaceDL_disperse_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreFrameReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_interfaces_interfaceDL_disperse_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveFrameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_interfaces_interfaceDL_disperse_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveFrameReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_interfaces_interfaceDL_disperse_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CodingChallengeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_interfaces_interfaceDL_disperse_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentChallengeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_interfaces_interfaceDL_disperse_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChallengeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_common_interfaces_interfaceDL_disperse_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_common_interfaces_interfaceDL_disperse_proto_goTypes,
		DependencyIndexes: file_common_interfaces_interfaceDL_disperse_proto_depIdxs,
		EnumInfos:         file_common_interfaces_interfaceDL_disperse_proto_enumTypes,
		MessageInfos:      file_common_interfaces_interfaceDL_disperse_proto_msgTypes,
	}.Build()
	File_common_interfaces_interfaceDL_disperse_proto = out.File
	file_common_interfaces_interfaceDL_disperse_proto_rawDesc = nil
	file_common_interfaces_interfaceDL_disperse_proto_goTypes = nil
	file_common_interfaces_interfaceDL_disperse_proto_depIdxs = nil
}
